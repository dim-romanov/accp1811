<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2018 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:altova="http://www.altova.com" xmlns:altova-xfi="http://www.altova.com/xslt-extensions/xbrl" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:array="http://www.w3.org/2005/xpath-functions/array" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:map="http://www.w3.org/2005/xpath-functions/map" xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:sps="http://www.altova.com/StyleVision/user-xpath-functions" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xff="http://www.xbrl.org/2010/function/formula" xmlns:xfi="http://www.xbrl.org/2008/function/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" exclude-result-prefixes="altova altova-xfi altovaext array clitype fn iso4217 ix java link map math sps xbrldi xbrli xff xfi xlink xs xsi">
	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-8"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:param name="Language" select="'R'"/>
	<xsl:variable name="XML1" select="/"/>
	<xsl:variable name="altova:nPxPerIn" select="96"/>
	<xsl:template match="/">
	
		<html>
			<head>
				<title/>
				<meta name="generator" content="Altova StyleVision Enterprise Edition 2018 (http://www.altova.com)"/>
				<meta http-equiv="X-UA-Compatible" content="IE=5"/>
				<xsl:comment>[if IE]&gt;&lt;STYLE type=&quot;text/css&quot;&gt;.altova-rotate-left-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3)} .altova-rotate-right-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1)} &lt;/STYLE&gt;&lt;![endif]</xsl:comment>
				<xsl:comment>[if !IE]&gt;&lt;!</xsl:comment>
				<style type="text/css">.altova-rotate-left-textbox{-webkit-transform: rotate(-90deg) translate(-100%, 0%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(-90deg) translate(-100%, 0%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(-90deg) translate(-100%, 0%); -ms-transform-origin: 0% 0%;}.altova-rotate-right-textbox{-webkit-transform: rotate(90deg) translate(0%, -100%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(90deg) translate(0%, -100%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(90deg) translate(0%, -100%); -ms-transform-origin: 0% 0%;}</style>
				<xsl:comment>&lt;![endif]</xsl:comment>
				<style type="text/css">@page { margin-left:0.6in; margin-right:0.6in; margin-top:0.79in; margin-bottom:0.79in } @media print { br.altova-page-break { page-break-before: always; } div.altova-page-break { page-break-before: always; } }</style>
			</head>
			<body>
				<xsl:for-each select="$XML1">
					<xsl:for-each select="MICEX_DOC">
						<xsl:if test="string-length(DOC_REQUISITES/@DOC_NO) &gt; 0">
							<div>
								<xsl:choose>
									<xsl:when test="$Language=&apos;R&apos;">
										<span style="font-family:Arial; font-size:10; font-style:italic; ">
											<xsl:text>Исх. №:</xsl:text>
										</span>
									</xsl:when>
									<xsl:when test="$Language=&apos;E&apos;">
										<span style="font-family:Arial; font-size:10; font-style:italic; ">
											<xsl:text>Ref. No:</xsl:text>
										</span>
									</xsl:when>
								</xsl:choose>
								<span style="font-family:Arial; font-size:10; font-style:italic; ">
									<xsl:text>&#160;</xsl:text>
								</span>
								<xsl:for-each select="DOC_REQUISITES">
									<xsl:for-each select="@DOC_NO">
										<span style="font-family:Arial; font-size:10; font-style:italic; font-weight:bold; ">
											<xsl:value-of select="string(.)"/>
										</span>
									</xsl:for-each>
									<span style="font-family:Arial; font-size:10; font-style:italic; ">
										<xsl:text>&#160;</xsl:text>
									</span>
									<xsl:choose>
										<xsl:when test="$Language=&apos;R&apos;">
											<span style="font-family:Arial; font-size:10; font-style:italic; ">
												<xsl:text>от</xsl:text>
											</span>
										</xsl:when>
										<xsl:when test="$Language=&apos;E&apos;">
											<span style="font-family:Arial; font-size:10; font-style:italic; ">
												<xsl:text>of</xsl:text>
											</span>
										</xsl:when>
									</xsl:choose>
									<span style="font-family:Arial; font-size:10; font-style:italic; ">
										<xsl:text>&#160;</xsl:text>
									</span>
									<xsl:for-each select="@DOC_DATE">
										<span style="font-family:Arial; font-size:10; font-style:italic; font-weight:bold; ">
											<xsl:variable name="altova:seqContentStrings_0">
												<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00')"/>
												<xsl:text>.</xsl:text>
												<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00')"/>
												<xsl:text>.</xsl:text>
												<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000')"/>
											</xsl:variable>
											<xsl:variable name="altova:sContent_0" select="string($altova:seqContentStrings_0)"/>
											<xsl:value-of select="$altova:sContent_0"/>
										</span>
									</xsl:for-each>
									<span>
										<xsl:text>&#160;</xsl:text>
									</span>
									<xsl:for-each select="@DOC_TIME">
										<span style="font-family:Arial; font-size:10; font-style:italic; font-weight:bold; ">
											<xsl:variable name="altova:seqContentStrings_1">
												<xsl:value-of select="format-number(number(substring(string(string(.)), 1, 2)), '00')"/>
												<xsl:text>:</xsl:text>
												<xsl:value-of select="format-number(number(substring(string(string(.)), 4, 2)), '00')"/>
												<xsl:text>:</xsl:text>
												<xsl:choose>
													<xsl:when test="contains(string(string(.)), 'Z')">
														<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00')"/>
													</xsl:when>
													<xsl:when test="contains(string(string(.)), '+')">
														<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00')"/>
													</xsl:when>
													<xsl:when test="contains(string(string(.)), '-')">
														<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 7), '-')), '00')"/>
													</xsl:when>
													<xsl:otherwise>
														<xsl:value-of select="format-number(number(substring(string(string(.)), 7)), '00')"/>
													</xsl:otherwise>
												</xsl:choose>
											</xsl:variable>
											<xsl:variable name="altova:sContent_1" select="string($altova:seqContentStrings_1)"/>
											<xsl:value-of select="$altova:sContent_1"/>
										</span>
									</xsl:for-each>
								</xsl:for-each>
							</div>
						</xsl:if>
						<table style="border:0; border-collapse:collapse; " border="1" width="100%">
							<xsl:variable name="altova:CurrContextGrid_2" select="."/>
							<tbody>
								<tr style="height:19px; ">
									<td style="border:0; font:Arial; font-size:12; font-weight:bold; " nowrap="set">
										<xsl:choose>
											<xsl:when test="$Language=&apos;R&apos;">
												<span style="font-family:Arial; ">
													<xsl:text>НКО НКЦ (АО)</xsl:text>
												</span>
											</xsl:when>
											<xsl:when test="$Language=&apos;E&apos;">
												<span style="font-family:Arial; ">
													<xsl:text>CCP NCC</xsl:text>
												</span>
											</xsl:when>
										</xsl:choose>
									</td>
									<td style="border:0; "/>
									<td style="border:0; "/>
									<td style="border:0; "/>
									<td style="border:0; font:Arial; font-size:12; font-weight:bold; text-align:right; ">
										<span style="font-family:Arial; font-size:12; ">
											<xsl:text>CCX84</xsl:text>
										</span>
									</td>
								</tr>
							</tbody>
						</table>
						<xsl:for-each select="CCX84">
							<br/>
							<div style="font:Arial; font-family:Arial; font-size:14; font-weight:bold; text-align:center; ">
								<xsl:choose>
									<xsl:when test="$Language=&apos;R&apos;">
										<span>
											<xsl:text>ОТЧЕТ ОБ ОЦЕНКЕ ОБЕСПЕЧЕНИЯ</xsl:text>
										</span>
									</xsl:when>
									<xsl:when test="$Language=&apos;E&apos;">
										<span>
											<xsl:text>COLLATERAL VALUATION REPORT</xsl:text>
										</span>
									</xsl:when>
								</xsl:choose>
							</div>
							<br/>
							<xsl:choose>
								<xsl:when test="$Language=&apos;R&apos;">
									<span style="font-family:Arial; font-size:12; ">
										<xsl:text>Дата, за которую сформирован отчет:</xsl:text>
									</span>
								</xsl:when>
								<xsl:when test="$Language=&apos;E&apos;">
									<span style="font-family:Arial; font-size:12; ">
										<xsl:text>Report date:</xsl:text>
									</span>
								</xsl:when>
							</xsl:choose>
							<span style="font-family:Arial; font-size:12; ">
								<xsl:text>&#160; </xsl:text>
							</span>
							<xsl:for-each select="@ReportDate">
								<span style="font:Arial; font-family:Arial; font-size:12; font-weight:bold; ">
									<xsl:variable name="altova:seqContentStrings_3">
										<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00')"/>
										<xsl:text>.</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00')"/>
										<xsl:text>.</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000')"/>
									</xsl:variable>
									<xsl:variable name="altova:sContent_3" select="string($altova:seqContentStrings_3)"/>
									<xsl:value-of select="$altova:sContent_3"/>
								</span>
							</xsl:for-each>
							<br/>
							<br/>
							<xsl:choose>
								<xsl:when test="$Language=&apos;R&apos;">
									<span style="font-family:Arial; font-size:12; ">
										<xsl:text>Идентификатор Участника клиринга:</xsl:text>
									</span>
									<span>
										<xsl:text>&#160;</xsl:text>
									</span>
								</xsl:when>
								<xsl:when test="$Language=&apos;E&apos;">
									<span style="font-family:Arial; font-size:12; ">
										<xsl:text>Clearing Member Identifier:</xsl:text>
									</span>
									<span>
										<xsl:text>&#160;</xsl:text>
									</span>
								</xsl:when>
							</xsl:choose>
							<span>
								<xsl:text>&#160;</xsl:text>
							</span>
							<xsl:for-each select="@ClearingFirmId">
								<span style="font-family:Arial; font-size:12; font-weight:bold; ">
									<xsl:value-of select="string(.)"/>
								</span>
							</xsl:for-each>
							<br/>
							<xsl:choose>
								<xsl:when test="$Language=&apos;R&apos;">
									<span style="font-family:Arial; font-size:12; ">
										<xsl:text>Наименование Участника клиринга:</xsl:text>
									</span>
									<span>
										<xsl:text>&#160;</xsl:text>
									</span>
									<xsl:for-each select="@ClearingFirmName">
										<span style="font-family:Arial; font-size:12; font-weight:bold; ">
											<xsl:value-of select="string(.)"/>
										</span>
									</xsl:for-each>
								</xsl:when>
								<xsl:when test="$Language=&apos;E&apos;">
									<span style="font-family:Arial; font-size:12; ">
										<xsl:text>Clearing Member name:</xsl:text>
									</span>
									<span>
										<xsl:text>&#160;</xsl:text>
									</span>
									<xsl:choose>
										<xsl:when test="@ClearingFirmNameEN = &apos;&apos;">
											<xsl:for-each select="@ClearingFirmName">
												<span style="font-family:Arial; font-size:12; font-weight:bold; ">
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</xsl:when>
										<xsl:otherwise>
											<xsl:for-each select="@ClearingFirmNameEN">
												<span style="font-family:Arial; font-size:12; font-weight:bold; ">
													<xsl:value-of select="string(.)"/>
												</span>
											</xsl:for-each>
										</xsl:otherwise>
									</xsl:choose>
								</xsl:when>
							</xsl:choose>
							<br/>
							<xsl:for-each select="SETTLE">
								<br/>
								<xsl:choose>
									<xsl:when test="$Language=&apos;R&apos;">
										<span style="font-family:Arial; font-size:12; ">
											<xsl:text>Расчетный код:</xsl:text>
										</span>
									</xsl:when>
									<xsl:when test="$Language=&apos;E&apos;">
										<span style="font-family:Arial; font-size:12; ">
											<xsl:text>Settlement code:</xsl:text>
										</span>
									</xsl:when>
								</xsl:choose>
								<span style="font-family:Arial; font-size:12; ">
									<xsl:text>&#160;</xsl:text>
								</span>
								<xsl:for-each select="@ExtSettleCode">
									<span style="font-family:Arial; font-size:12; font-weight:bold; ">
										<xsl:value-of select="string(.)"/>
									</span>
								</xsl:for-each>
								<br/>
								<table style="border:0; border-collapse:collapse; font-family:Arial; font-size:12; " border="1" width="100%">
									<xsl:variable name="altova:CurrContextGrid_4" select="."/>
									<thead>
										<tr>
											<th>
												<xsl:choose>
													<xsl:when test="$Language=&apos;R&apos;">
														<span>
															<xsl:text>Код валюты/</xsl:text>
														</span>
														<br/>
														<span>
															<xsl:text>драгоценного</xsl:text>
														</span>
														<br/>
														<span>
															<xsl:text>метала</xsl:text>
														</span>
													</xsl:when>
													<xsl:when test="$Language=&apos;E&apos;">
														<span>
															<xsl:text>Currency/</xsl:text>
														</span>
														<br/>
														<span>
															<xsl:text>Precious</xsl:text>
														</span>
														<br/>
														<span>
															<xsl:text>metal code</xsl:text>
														</span>
													</xsl:when>
												</xsl:choose>
											</th>
											<th>
												<xsl:choose>
													<xsl:when test="$Language=&apos;R&apos;">
														<span>
															<xsl:text>Наименование валюты/</xsl:text>
														</span>
														<br/>
														<span>
															<xsl:text>драгоценного</xsl:text>
														</span>
														<br/>
														<span>
															<xsl:text>металла</xsl:text>
														</span>
													</xsl:when>
													<xsl:when test="$Language=&apos;E&apos;">
														<span>
															<xsl:text>Currency/</xsl:text>
														</span>
														<br/>
														<span>
															<xsl:text>Precious</xsl:text>
														</span>
														<br/>
														<span>
															<xsl:text>metal name</xsl:text>
														</span>
													</xsl:when>
												</xsl:choose>
											</th>
											<th>
												<xsl:choose>
													<xsl:when test="$Language=&apos;R&apos;">
														<span>
															<xsl:text>Количество/</xsl:text>
														</span>
														<br/>
														<span>
															<xsl:text>сумма актива,</xsl:text>
														</span>
														<br/>
														<span>
															<xsl:text>внесенного в качестве</xsl:text>
														</span>
														<br/>
														<span>
															<xsl:text>Обеспечения</xsl:text>
														</span>
													</xsl:when>
													<xsl:when test="$Language=&apos;E&apos;">
														<span>
															<xsl:text>Collateral value</xsl:text>
														</span>
													</xsl:when>
												</xsl:choose>
											</th>
											<th>
												<xsl:choose>
													<xsl:when test="$Language=&apos;R&apos;">
														<span>
															<xsl:text>Количество/</xsl:text>
														</span>
														<br/>
														<span>
															<xsl:text>сумма актива,</xsl:text>
														</span>
														<br/>
														<span>
															<xsl:text>недоступного для вывода</xsl:text>
														</span>
													</xsl:when>
													<xsl:when test="$Language=&apos;E&apos;">
														<span>
															<xsl:text>Locked</xsl:text>
														</span>
														<br/>
														<span>
															<xsl:text>collateral value</xsl:text>
														</span>
													</xsl:when>
												</xsl:choose>
											</th>
											<th>
												<xsl:choose>
													<xsl:when test="$Language=&apos;R&apos;">
														<span>
															<xsl:text>Стоимость Обеспечения,</xsl:text>
														</span>
														<br/>
														<span>
															<xsl:text>руб.</xsl:text>
														</span>
													</xsl:when>
													<xsl:when test="$Language=&apos;E&apos;">
														<span>
															<xsl:text>Collateral value</xsl:text>
														</span>
														<br/>
														<span>
															<xsl:text>in rubles</xsl:text>
														</span>
													</xsl:when>
												</xsl:choose>
											</th>
										</tr>
									</thead>
									<tbody>
										<xsl:for-each select="RECORDS">
											<tr>
												<td style="border-bottom:0; border-top:0; text-align:center; ">
													<span>
														<xsl:text>&#160;</xsl:text>
													</span>
													<xsl:for-each select="@CurrencyId">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td style="border-bottom:0; border-top:0; text-align:center; ">
													<xsl:choose>
														<xsl:when test="$Language=&apos;R&apos;">
															<xsl:for-each select="@CurrencyName">
																<span>
																	<xsl:value-of select="string(.)"/>
																</span>
															</xsl:for-each>
														</xsl:when>
														<xsl:when test="$Language=&apos;E&apos;">
															<xsl:for-each select="@CurrencyNameEN">
																<span>
																	<xsl:value-of select="string(.)"/>
																</span>
															</xsl:for-each>
														</xsl:when>
													</xsl:choose>
													<span>
														<xsl:text>&#160;</xsl:text>
													</span>
												</td>
												<td style="border-bottom:0; border-top:0; text-align:right; " nowrap="set">
													<span>
														<xsl:text>&#160;</xsl:text>
													</span>
													<xsl:for-each select="@Quantity">
														<span>
															<xsl:variable name="altova:seqContentStrings_5">
																<xsl:value-of select="format-number(number(string(.)), '###,##0.00')"/>
															</xsl:variable>
															<xsl:variable name="altova:sContent_5" select="string($altova:seqContentStrings_5)"/>
															<xsl:value-of select="$altova:sContent_5"/>
														</span>
													</xsl:for-each>
												</td>
												<td style="border-bottom:0; border-top:0; text-align:right; " nowrap="set">
													<span>
														<xsl:text>&#160;</xsl:text>
													</span>
													<xsl:for-each select="@LockQuantity">
														<span>
															<xsl:variable name="altova:seqContentStrings_6">
																<xsl:value-of select="format-number(number(string(.)), '###,##0.00')"/>
															</xsl:variable>
															<xsl:variable name="altova:sContent_6" select="string($altova:seqContentStrings_6)"/>
															<xsl:value-of select="$altova:sContent_6"/>
														</span>
													</xsl:for-each>
												</td>
												<td style="border-bottom:0; border-top:0; text-align:right; " nowrap="set">
													<span>
														<xsl:text>&#160;</xsl:text>
													</span>
													<xsl:for-each select="@Value">
														<span>
															<xsl:variable name="altova:seqContentStrings_7">
																<xsl:value-of select="format-number(number(string(.)), '###,##0.00')"/>
															</xsl:variable>
															<xsl:variable name="altova:sContent_7" select="string($altova:seqContentStrings_7)"/>
															<xsl:value-of select="$altova:sContent_7"/>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</xsl:for-each>
										<tr style="border-bottom:0; border-left:0; border-right:0; font-weight:bold; ">
											<td colspan="4">
												<xsl:choose>
													<xsl:when test="$Language=&apos;R&apos;">
														<span>
															<xsl:text>Общая стоимость Обеспечения, руб.</xsl:text>
														</span>
													</xsl:when>
													<xsl:when test="$Language=&apos;E&apos;">
														<span>
															<xsl:text>Full collateral value in rubles</xsl:text>
														</span>
													</xsl:when>
												</xsl:choose>
											</td>
											<td style="font-weight:bold; text-align:right; " nowrap="set">
												<span>
													<xsl:text>&#160;</xsl:text>
												</span>
												<xsl:for-each select="@SumValue">
													<span>
														<xsl:variable name="altova:seqContentStrings_8">
															<xsl:value-of select="format-number(number(string(.)), '###,##0.00')"/>
														</xsl:variable>
														<xsl:variable name="altova:sContent_8" select="string($altova:seqContentStrings_8)"/>
														<xsl:value-of select="$altova:sContent_8"/>
													</span>
												</xsl:for-each>
											</td>
										</tr>
										<tr style="border-bottom:0; border-left:0; border-right:0; font-weight:bold; ">
											<td colspan="4">
												<xsl:choose>
													<xsl:when test="$Language=&apos;R&apos;">
														<span>
															<xsl:text>Стоимость Обеспечения, доступного для вывода, руб.</xsl:text>
														</span>
													</xsl:when>
													<xsl:when test="$Language=&apos;E&apos;">
														<span>
															<xsl:text>Free collateral value in rubles</xsl:text>
														</span>
													</xsl:when>
												</xsl:choose>
											</td>
											<td style="font-weight:bold; text-align:right; " nowrap="set">
												<span>
													<xsl:text>&#160;</xsl:text>
												</span>
												<xsl:for-each select="@FreeValue">
													<span>
														<xsl:variable name="altova:seqContentStrings_9">
															<xsl:value-of select="format-number(number(string(.)), '###,##0.00')"/>
														</xsl:variable>
														<xsl:variable name="altova:sContent_9" select="string($altova:seqContentStrings_9)"/>
														<xsl:value-of select="$altova:sContent_9"/>
													</span>
												</xsl:for-each>
											</td>
										</tr>
										<tr style="border-bottom:0; border-left:0; border-right:0; font-weight:bold; ">
											<td colspan="4">
												<xsl:choose>
													<xsl:when test="$Language=&apos;R&apos;">
														<span>
															<xsl:text>Стоимость Обеспечения, недоступного для вывода, руб.</xsl:text>
														</span>
													</xsl:when>
													<xsl:when test="$Language=&apos;E&apos;">
														<span>
															<xsl:text>Locked collateral value in rubles</xsl:text>
														</span>
													</xsl:when>
												</xsl:choose>
											</td>
											<td style="font-weight:bold; text-align:right; " nowrap="set">
												<span>
													<xsl:text>&#160;</xsl:text>
												</span>
												<xsl:for-each select="@LockValue">
													<span>
														<xsl:variable name="altova:seqContentStrings_10">
															<xsl:value-of select="format-number(number(string(.)), '###,##0.00')"/>
														</xsl:variable>
														<xsl:variable name="altova:sContent_10" select="string($altova:seqContentStrings_10)"/>
														<xsl:value-of select="$altova:sContent_10"/>
													</span>
												</xsl:for-each>
											</td>
										</tr>
										<tr style="border-bottom:0; border-left:0; border-right:0; font-weight:bold; ">
											<td colspan="4">
												<xsl:choose>
													<xsl:when test="$Language=&apos;R&apos;">
														<span>
															<xsl:text>Единый лимит</xsl:text>
														</span>
													</xsl:when>
													<xsl:when test="$Language=&apos;E&apos;">
														<span>
															<xsl:text>Single limit</xsl:text>
														</span>
													</xsl:when>
												</xsl:choose>
											</td>
											<td style="font-weight:bold; text-align:right; " nowrap="set">
												<span>
													<xsl:text>&#160;</xsl:text>
												</span>
												<xsl:for-each select="@SingleLimit">
													<span>
														<xsl:variable name="altova:seqContentStrings_11">
															<xsl:value-of select="format-number(number(string(.)), '###,##0.00')"/>
														</xsl:variable>
														<xsl:variable name="altova:sContent_11" select="string($altova:seqContentStrings_11)"/>
														<xsl:value-of select="$altova:sContent_11"/>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
							</xsl:for-each>
						</xsl:for-each>
						<br/>
						<br/>
						<xsl:choose>
							<xsl:when test="$Language=&apos;R&apos;">
								<span style="font-family:Arial; font-size:12; ">
									<xsl:text>Уполномоченный представитель НКО НКЦ (АО)</xsl:text>
								</span>
								<span>
									<xsl:text>&#160;&#160;&#160;&#160;&#160;&#160; </xsl:text>
								</span>
							</xsl:when>
							<xsl:when test="$Language=&apos;E&apos;">
								<span style="font-family:Arial; font-size:12; ">
									<xsl:text>CCP NCC authorized person signature</xsl:text>
								</span>
								<span>
									<xsl:text>&#160;&#160;&#160;&#160;&#160;&#160; </xsl:text>
								</span>
							</xsl:when>
						</xsl:choose>
						<xsl:for-each select="DOC_REQUISITES">
							<xsl:for-each select="@SIGNAUTHOR">
								<span style="font-family:Arial; font-size:12; ">
									<xsl:value-of select="string(.)"/>
								</span>
							</xsl:for-each>
						</xsl:for-each>
					</xsl:for-each>
				</xsl:for-each>
			</body>
		</html>
	</xsl:template>
</xsl:stylesheet>
